# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Auto grade

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  auto-grade:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - name: Check no change to .github
      run: bash .github/workflows/check_no_change.sh

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test single transfer (small file)
      working-directory: ${{github.workspace}}/build
      run: bash TestSmallFiles.sh single

    - name: Test continuous transfer (small file)
      working-directory: ${{github.workspace}}/build
      run: bash TestSmallFiles.sh continuous

    - name: Check memory leak (small file)
      working-directory: ${{github.workspace}}/build
      run: bash TestSmallFiles.sh memcheck

    - name: Test single transfer (large file)
      working-directory: ${{github.workspace}}/build
      if: ${{ always() }}
      run: bash TestLargeFiles.sh single

    - name: Test continuous transfer (large file)
      working-directory: ${{github.workspace}}/build
      run: bash TestLargeFiles.sh continuous

    - name: Test binary file transfer (binary file)
      working-directory: ${{github.workspace}}/build
      run: bash TestLargeFiles.sh binary

    - name: Check memory leak (large file)
      working-directory: ${{github.workspace}}/build
      run: bash TestLargeFiles.sh memcheck
